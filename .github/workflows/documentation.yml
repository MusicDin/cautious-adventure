# Documentation deployment workflow.
#
# Documentation is always deployed for master and releases branch.
# deployed  is deployed on the latest release branch or on the new
# latest release. This prevents bugfixes on older releases to override the
# latest documentation.
name: documentation
on:
  push:
    # tags:
    #   - v*
    branches:
      - release-*
      - master
  # release:
  #   types:
  #     - published

env:
  PYTHON_VERSION: 3.x

jobs:
  deploy_docs:
    name: Deploy documentation
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [ 3.8 ]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        
      - name: Set environment variables (branch name)
        run: |
          echo "BRANCH_NAME=${GITHUB_REF##*/}" >> $GITHUB_ENV

      - name: Extract version from branch name
        id: branch_version
        uses: actions/github-script@v6
        env:
          BRANCH_NAME: ${{ env.BRANCH_NAME }}
        with:
          result-encoding: string
          script: |
            const prefix = 'v'
            const branch = process.env.BRANCH_NAME
            version = branch.substring(branch.lastIndexOf('-') + 1, branch.length)
            version = version.startsWith(prefix) ? version : prefix + version
            return branch.includes('release') ? version : branch

      - name: Get latest repository version
        id: latest_version
        uses: oprypin/find-latest-tag@v1.1.0
        with:
          repository: ${{ github.repository }}
          prefix: 'v'

      - name: Set environment variables
        run: |
          echo "BRANCH_VERSION=${{ steps.branch_version.outputs.result }}" >> $GITHUB_ENV
          echo "LATEST_VERSION=${{ steps.latest_version.outputs.tag }}" >> $GITHUB_ENV

      - name: Print versions
        run: |
          echo "LATEST_VERSION=${{ env.LATEST_VERSION }}"
          echo "BRANCH_VERSION=${{ env.BRANCH_VERSION }}"

#       - name: Set up Python runtime
#         uses: actions/setup-python@v3
#         with:
#           python-version: ${{ matrix.python-version }}

#       - name: Install Python dependencies
#         run: |
#           pip install \
#             jinja2>=3.1 \
#             markdown>=3.3 \
#             mkdocs>=1.3 \
#             mkdocs-material>=8.2.11 \
#             mkdocs-material-extensions>=1.0.3 \
#             mkdocs-minify-plugin>=0.5 \
#             mkdocs-redirects>=1.0 \
#             pygments>=2.11 \
#             pymdown-extensions>=9.3 \
#             mike>=1.1.2

      # - name: Configure Git user
      #   run: |
      #     git config user.name github-actions
      #     git config user.email github-actions@github.com

#       - name: Deploy documentation
#         run: |
#           mike deploy --push --update-aliases ${{ env.BRANCH_VERSION }}
          
#       - name: Update documentation alias for latest
#         if: ${{ contains(env.LATEST_VERSION, env.BRANCH_VERSION) }}
#         # mike set-default --push latest
#         run: |
#           mike deploy --push --update-aliases latest
